"""
Django settings for shell project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

from jsonconfigparser import JSONConfigParser
import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_DIR = os.path.join(BASE_DIR, 'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'compressor',
    'bootstrapform',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shell.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'appointment/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shell.wsgi.application'

# The absolute path to the directory where collectstatic will collect static files for deployment.
# static file collection
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles/')
STATIC_URL = '/static/'

# STATICFILES_DIRS = [
    # Copy bootstrap assets.
    # ('fonts', os.path.join(BASE_DIR, "node_modules", "bootstrap", "fonts")),
    # ('less', os.path.join(BASE_DIR, "node_modules", "bootstrap", "less")),
    # ('bootstrap-js', os.path.join(BASE_DIR, "node_modules", "bootstrap", "js")),
    # Copy other assets.
    # ('less', os.path.join(BASE_DIR, "appointment", "static", "less")),
    # ('css', os.path.join(BASE_DIR, "appointment", "static", "css")),
# ]

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'appointment/static'),
)

# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'compressor.finders.CompressorFinder',
# )

# COMPRESS_ENABLED = True
# COMPRESS_PRECOMPILERS = (
#     ('text/less', '/usr/local/bin/lessc {infile} {outfile}'),
# )

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Bangui'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# STATIC_URL = '/static/'


# media files
MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'


"""
    Import site-specifc stuff from config.ini.
"""
config = JSONConfigParser()
config.read(os.path.join(BASE_DIR, "config.ini"))

# Django [django] block
SECRET_KEY = config.get('django', 'SECRET_KEY')
ALLOWED_HOSTS = config.get('django', 'ALLOWED_HOSTS')
DEBUG = config.get('django', 'DEBUG')
# ADMINS = config.get('django', 'ADMINS')

# Parse meeting types
ORGANIZER_NAME = config.get('meetings', 'ORGANIZER_NAME')
ORGANIZER_EMAIL = config.get('meetings', 'ORGANIZER_EMAIL')
ORGANIZER_GREETING = config.get('meetings', 'ORGANIZER_GREETING')
BOOKING_TYPES = config.get('meetings', 'BOOKING_TYPES')

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_SSL = config.get('email', 'USE_SSL')
EMAIL_USE_TLS = True
EMAIL_ADDRESS = config.get('email', 'ADDRESS')
EMAIL_HOST = config.get('email', 'HOST')
EMAIL_PORT = config.get('email', 'PORT')
EMAIL_HOST_USER = config.get('email', 'HOST_USER')
EMAIL_HOST_PASSWORD = config.get('email', 'HOST_PASSWORD')

# test email send_mail('Django', 'mail from django', 'shell.appointment@gmail.com', ['ayobabalolaofficial@gmail.co'], fail_silently=False)


# Cronofy settings
CRONOFY_ACCESS_TOKEN = config.get('cronofy', 'ACCESS_TOKEN')
CRONOFY_REFRESH_TOKEN = config.get('cronofy', 'REFRESH_TOKEN')
CRONOFY_SUB = config.get('cronofy', 'SUB')
# Calendar names
CAL_NAMES = config.get("calendar", "CHECK")
CAL_CREATE_BOOKING = config.get("calendar", "BOOK")
TIME_ZONE = config.get("calendar", "TIME_ZONE")
SHOW_REASONS = config.get("calendar", "SHOW_REASONS")
SHOW_CONFLICTING_EVENTS = config.get("calendar", "SHOW_CONFLICTING_EVENTS")

# Parse availability strings
AVAIL_CONFIG_STRINGS = [
    config.get('availability', day) for day in (
        'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN')
]
